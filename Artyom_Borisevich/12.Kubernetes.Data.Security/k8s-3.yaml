---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
data:
  test.html: |
    <HTML><HEAD><TITLE>A.Borisevich</TITLE></HEAD>
    <BODY><h1>ZDAROVO OTEC</h1></BODY></HTML>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  labels:
    app: simple-web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "50%"
      maxUnavailable: "0%"
  selector:
    matchLabels:
      app: simple-web
  template:
    metadata:
      labels:
        app: simple-web
    spec:
      containers:
        - name: php-nginx
          image: ubuntu/nginx
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: tmp
              mountPath: /var/www/html/index.html
              subPath: index.html
            - name: ssh-keys
              readOnly: true
              mountPath: "/root/.ssh"
      initContainers:
        - name: init
          image: busybox
          command: [ "sh" ]
          args: [ "-c", "cd /var/www/html/; cat test.html > index.html;
          sed -i 's/ZDAROVO OTEC/Hello from $(MY_POD_NAME)/' index.html;
          cat index.html;
          cp /var/www/html/index.html /tmp/artifact/index.html" ]
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: config-map-mount
              mountPath: /var/www/html/test.html
              subPath: test.html
            - name: tmp
              mountPath: /tmp/artifact
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config-map-mount
          configMap:
            name: config-map
        - name: ssh-keys
          secret:
            secretName: ssh-keys
            defaultMode: 0600
---
apiVersion: v1
kind: Service
metadata:
  name: simple-web-service
  labels:
    run: simple-web-service
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app: simple-web

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-sa
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-alias: "nginx-test.k8s-3.sa"
spec:
  rules:
    - host: nginx-test.k8s-3.sa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: simple-web-service
                port:
                  number: 80

$script = <<-SCRIPT
#####################################
echo "Install"
apt update && apt upgrade -yqq && apt install -yqq openjdk-11-jdk wget git curl nginx
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
echo deb https://pkg.jenkins.io/debian binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list
apt update && apt install -yqq jenkins
service jenkins stop
echo "Install -> Success."
#####################################
echo "Jenkins behind NGINX"
cp -v /vagrant/jenkins.conf /etc/nginx/sites-available/default
systemctl restart nginx
echo "Jenkins behind NGINX -> Success"
#####################################
echo "Change Jenkins Auth Strateg"
echo 'JAVA_ARGS="-Djenkins.install.runSetupWizard=false"' >> /etc/default/jenkins
rm -rf /var/lib/jenkins/init.groovy.d && mkdir /var/lib/jenkins/init.groovy.d
cp -v /vagrant/01_AuthorizationStrategy.groovy /var/lib/jenkins/init.groovy.d/
cp -v /vagrant/02_addUser.groovy /var/lib/jenkins/init.groovy.d/
cp -v /vagrant/03_addUser.groovy /var/lib/jenkins/init.groovy.d/
service jenkins start
sleep 2m
echo "Change Jenkins Auth Strategy -> Success"
####################################
echo "Install plugins "
JENKINSPWD=$(sudo cat /var/lib/jenkins/secrets/initialAdminPassword)
rm -f jenkins_cli.jar.*
wget -q http://localhost:8080/jnlpJars/jenkins-cli.jar
while IFS= read -r line
do
  list=$list' '$line
done < /vagrant/jenkinsPlugins.txt
java -jar ./jenkins-cli.jar -auth admin:$JENKINSPWD -s http://localhost:8080 install-plugin $list
service jenkins restart
sleep 1m
echo "Install plugins part -> Success"
####################################
echo "Generate SSH keys"
runuser -l jenkins -c 'echo -e "\n\n\n" | ssh-keygen -t rsa'
runuser -l jenkins -c 'cat ~/.ssh/id_rsa'
runuser -l jenkins -c 'cat ~/.ssh/id_rsa.pub'
echo "Generate SSH keys -> Success"
####################################
echo "Master ready!"
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-20.04"
  config.vm.define "Jenkins"
  config.vm.network "public_network", ip: "192.168.1.111",  bridge: "ens33" ## TO CHANGE
  config.vm.provider "virtualbox" do |v|
    v.memory = 4096
    v.cpus = 4
  end    
  config.vm.provision "shell", inline: $script
end



credentials:
  system:
    domainCredentials:
    - credentials:
      - basicSSHUserPrivateKey:
          id: "jenkins_ssh"
          privateKeySource:
            directEntry:
              privateKey: 
          scope: GLOBAL
          username: "jenkins"
      - string:
          id: "slack_webhook"
          scope: GLOBAL
          secret: 
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      permissions:
      - "GROUP:Job/Read:authenticated"
      - "GROUP:Overall/Read:authenticated"
      - "GROUP:View/Read:authenticated"
      - "Overall/Administer:admin"
      - "Overall/Read:abaitov"
      - "USER:Agent/Build:admin"
      - "USER:Agent/Configure:admin"
      - "USER:Agent/Connect:admin"
      - "USER:Agent/Create:admin"
      - "USER:Agent/Delete:admin"
      - "USER:Agent/Disconnect:admin"
      - "USER:Credentials/Create:admin"
      - "USER:Credentials/Delete:admin"
      - "USER:Credentials/ManageDomains:admin"
      - "USER:Credentials/Update:admin"
      - "USER:Credentials/View:admin"
      - "USER:Job/Build:admin"
      - "USER:Job/Cancel:admin"
      - "USER:Job/Configure:admin"
      - "USER:Job/Create:admin"
      - "USER:Job/Delete:admin"
      - "USER:Job/Discover:admin"
      - "USER:Job/Move:admin"
      - "USER:Job/Read:admin"
      - "USER:Job/Workspace:admin"
      - "USER:Overall/Administer:admin"
      - "USER:Overall/Read:abaitov"
      - "USER:Overall/Read:admin"
      - "USER:Run/Delete:admin"
      - "USER:Run/Replay:admin"
      - "USER:Run/Update:admin"
      - "USER:SCM/Tag:admin"
      - "USER:View/Configure:admin"
      - "USER:View/Create:admin"
      - "USER:View/Delete:admin"
      - "USER:View/Read:admin"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "org.jenkinsci.plugins.matrixauth.AmbiguityMonitor"
  - "jenkins.diagnostics.RootUrlNotSetMonitor"
  - "jenkins.diagnostics.ControllerExecutorsAgents"
  labelAtoms:
  - name: "built-in"
  - name: "node"
  - name: "slave"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodes:
  - permanent:
      labelString: "slave"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "192.168.1.112"
          port: 22
          sshHostKeyVerificationStrategy:
            manuallyTrustedKeyVerificationStrategy:
              requireInitialManualTrust: false
      name: "node"
      numExecutors: 2
      remoteFS: "/var/lib/jenkins/"
      retentionStrategy: "always"
  numExecutors: 2
  primaryView:
  all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "abaitov"
        name: "abaitov"
        properties:
        - "apiToken"
        - "mailer"
        - "favorite"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "slack"
        - "timezone"
      - id: "admin"
        name: "admin"
        properties:
        - "apiToken"
        - colorBlindProperty:
            enabledColorBlindSupport: false
        - mailer:
            emailAddress: "admin"
        - "favorite"
        - preferredProvider:
            providerId: "default"
      - id: "baitov"
        name: "Andrei Baitau"
        properties:
        - "apiToken"
        - "favorite"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "slack"
        - "timezone"
        - mailer:
            emailAddress: "baitovandrei@gmail.com"
  slaveAgentPort: -1
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  sSHD:
    port: -1
  scriptApproval:
    approvedScriptHashes:
    unclassified:
  ansiColorBuildWrapper:
    colorMaps:
    - black: "#000000"
      blackB: "#4C4C4C"
      blue: "#1E90FF"
      blueB: "#4682B4"
      cyan: "#00CDCD"
      cyanB: "#00FFFF"
      green: "#00CD00"
      greenB: "#00FF00"
      magenta: "#CD00CD"
      magentaB: "#FF00FF"
      name: "xterm"
      red: "#CD0000"
      redB: "#FF0000"
      white: "#E5E5E5"
      whiteB: "#FFFFFF"
      yellow: "#CDCD00"
      yellowB: "#FFFF00"
    - black: "#000000"
      blackB: "#555555"
      blue: "#0000AA"
      blueB: "#5555FF"
      cyan: "#00AAAA"
      cyanB: "#55FFFF"
      defaultBackground: 0
      defaultForeground: 7
      green: "#00AA00"
      greenB: "#55FF55"
      magenta: "#AA00AA"
      magentaB: "#FF55FF"
      name: "vga"
      red: "#AA0000"
      redB: "#FF5555"
      white: "#AAAAAA"
      whiteB: "#FFFFFF"
      yellow: "#AA5500"
      yellowB: "#FFFF55"
    - black: "black"
      blackB: "black"
      blue: "blue"
      blueB: "blue"
      cyan: "cyan"
      cyanB: "cyan"
      green: "green"
      greenB: "green"
      magenta: "magenta"
      magentaB: "magenta"
      name: "css"
      red: "red"
      redB: "red"
      white: "white"
      whiteB: "white"
      yellow: "yellow"
      yellowB: "yellow"
    - black: "#2E3436"
      blackB: "#2E3436"
      blue: "#3465A4"
      blueB: "#3465A4"
      cyan: "#06989A"
      cyanB: "#06989A"
      defaultBackground: 0
      defaultForeground: 7
      green: "#4E9A06"
      greenB: "#4E9A06"
      magenta: "#75507B"
      magentaB: "#75507B"
      name: "gnome-terminal"
      red: "#CC0000"
      redB: "#CC0000"
      white: "#D3D7CF"
      whiteB: "#D3D7CF"
      yellow: "#C4A000"
      bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  email-ext:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    charset: "UTF-8"
    debugMode: false
    defaultBody: |-
      $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

      Check console output at $BUILD_URL to view the results.
    defaultContentType: "text/plain"
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    defaultTriggerIds:
    - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: -1
    precedenceBulk: false
    watchingEnabled: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "http://jenkins.sa/github-webhook/"
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://jenkins.sa/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  slackNotifier:
    botUser: false
    room: "jenkins-baitov"
    sendAsText: false
    teamDomain: "sa-itacademy-by"
    tokenCredentialId: "slack_webhook"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
jobs:
  - script: >
     job('Job_DSL') {
             scm {
                git {
                  remote {
                     url 'https://github.com/AndreiBaitau/jenkins.git'
               }
            branch('master')
            }
          }
        steps {
          dsl {
            external('Test.groovy')

          }
        }
      }
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

$script = <<-SCRIPT
mv /tmp/pub_key.pub /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh/authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
echo "Client done!"
SCRIPT

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  #config.vm.box = "base"

	# Configure jump machine
	config.vm.define "jumper" do |jumper|
         jumper.vm.box = "jumper"
         jumper.vm.network "private_network", ip: "10.0.0.10"
		 jumper.vm.network "forwarded_port", guest: 8080, host: 8080
		 jumper.vm.network "forwarded_port", guest: 80, host: 80		 
		 jumper.vm.hostname = "jumper"
		 jumper.vm.provider "virtualbox" do |pmv|
			pmv.memory = 512
			pmv.cpus = 1
		 end
		 jumper.vm.synced_folder ".", "/vagrant", disabled: true		 	 
     end

	# Configure host1 machine
	config.vm.define "host1" do |host1|
         host1.vm.box = "centos/7"
         host1.vm.network "private_network", ip: "10.0.0.11"
		 host1.vm.hostname = "host1"
		 host1.vm.provider "virtualbox" do |pmv|
			pmv.memory = 512
			pmv.cpus = 1
		 end
		 host1.vm.synced_folder ".", "/vagrant", disabled: true		 
		 host1.vm.provision "file", source: 'E:\vagrantfiles\ansible-test\id_rsa.pub', destination: '/tmp/pub_key.pub'
		 host1.vm.provision "shell",
			inline: $script
     end

	# Configure host2 machine
	config.vm.define "host2" do |host2|
         host2.vm.box = "ubuntu/xenial64"
         host2.vm.network "private_network", ip: "10.0.0.12"
		 host2.vm.hostname = "host2"
		 host2.vm.provider "virtualbox" do |pmv|
			pmv.memory = 512
			pmv.cpus = 1
		 end
		 host2.vm.synced_folder ".", "/vagrant", disabled: true	
		 host2.vm.provision "file", source: 'E:\vagrantfiles\ansible-test\id_rsa.pub', destination: '/tmp/pub_key.pub'
		 host2.vm.provision "shell",
		 inline: $script		 
     end

	# Configure host3 machine
	config.vm.define "host3" do |host3|
         host3.vm.box = "centos/7"
         host3.vm.network "private_network", ip: "10.0.0.13"
		 host3.vm.hostname = "host3"
		 host3.vm.provider "virtualbox" do |pmv|
			pmv.memory = 512
			pmv.cpus = 1
		 end
		 host3.vm.synced_folder ".", "/vagrant", disabled: true
		 host3.vm.provision "file", source: 'E:\vagrantfiles\ansible-test\id_rsa.pub', destination: '/tmp/pub_key.pub'
		 host3.vm.provision "shell",
		 inline: $script		 
     end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end

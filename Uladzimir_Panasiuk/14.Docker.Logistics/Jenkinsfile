pipeline {
    agent {
        label 'local'
    }

    environment {
        HUBCREDS = credentials("${params.HubCreds}")
    }

    parameters {
        string(
            name: 'GitRepo',
            defaultValue: 'git@github.com:upanasiuk/devops-course.git'
        )
        
        string(
            name: 'GitBranch',
            description: 'Branch where the Dockerfile is',
            defaultValue: 'dockerlading'
        )
        
        credentials(
            name: 'GitCredsToUse',
            description: 'Credentials to use for github repo',
            defaultValue: 'my_github',
            credentialType: 'SSH username with private key',
            required: false 
        )
        
        credentials(
            name: 'HubCreds',
            description: 'Login/password to access docker hub',
            defaultValue: 'dockerhub',
            credentialType: 'Username with password',
            required: true
        )
    }

    stages {
        stage('Clone GIT') {
            steps {
                git credentialsId: "${params.GitCredsToUse}", url: "${params.GitRepo}", branch: "${params.GitBranch}"
            }
        }

        stage('Build image') {
            steps {
                script {
                    Image = docker.build("${env.HUBCREDS_USR}/${params.GitBranch}:${env.BUILD_ID}")
                 }
            }
        }

        stage('Push image') {
            steps {
                script {
                    docker.withRegistry('', "${params.HubCreds}") {
                        Image.push()
                    }
                }
            }
        }

        stage('Remove image from local regisrty') {
            steps {
                script {
                    sh "docker image rm \"$HUBCREDS_USR/$GitBranch:$BUILD_ID\""
                 }
            }
        }
    }
}